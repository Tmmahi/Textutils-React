{"version":3,"sources":["components/Navbar.js","components/Text.js","components/Alert.js","components/About.js","components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","about","class","onClick","toggleMode","htmlFor","Text","useState","text","setText","value","onChange","event","target","rows","style","backgroundColor","color","length","split","newText","toUpperCase","showAlert","toLowerCase","prototype","PropTypes","string","isRequired","defaultProps","Alert","alert","typ","role","ttl","msg","About","Contact","for","placeholder","selected","App","massege","setalert","setTimeout","setmode","document","body","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5ede09c1.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\r\n      <div className=\"container-fluid\">\r\n        <NavLink className=\"navbar-brand\" to=\"/\">{props.title}</NavLink>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/about\">{props.about}</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/contact\">Contact</NavLink>\r\n            </li>\r\n\r\n          </ul>\r\n          <div class=\"form-check form-switch\">\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"></label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n  )\r\n}\r\n\r\nNavbar.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n  title: \"mahi\",\r\n  about: \"about-not found\"\r\n}","import React, { useState } from \"react\";\r\n\r\nexport default function Text(props) {\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const tolowcase = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert('success', 'converted into lowercase', 'success')\r\n    };\r\n\r\n   const toupcase = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert('success', 'converted into upercase', 'success')\r\n    };\r\n\r\n    const tochange = (event) => {\r\n        setText(event.target.value);\r\n    };\r\n\r\n    \r\n    return (\r\n        <div className=\" container my-5\" >\r\n            <div className=\"mb-3\">\r\n                <h3>Enter Your Text Here</h3>\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    value={text}\r\n                    onChange={tochange}\r\n                    id=\"exampleFormControlTextarea1\"\r\n                    rows=\"8\"\r\n                    style={{ backgroundColor: props.mode === 'dark' ? '#343a40' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }}\r\n                ></textarea>\r\n                <p>{text.length} characters {text.split(' ').length} wards</p>\r\n                <button className=\" btn-primary btn my-4\" onClick={toupcase}>\r\n                    ToUperCase\r\n                </button>\r\n                <button className=\" btn-success btn my-4 mx-3\" onClick={tolowcase}>\r\n                    ToLowerCase\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        props.alert && <div>\r\n            <div class={`alert alert-${props.alert.typ}`} role=\"alert\">\r\n                <strong>{props.alert.ttl}</strong>: {props.alert.msg}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\" container mt-5\">\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            Accordion Item #1\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Accordion Item #2\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            Accordion Item #3\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\n\r\nfunction Contact() {\r\n    return (\r\n        <div className=\"container\">\r\n            <form className=\"row g-3\">\r\n                <div className=\"col-md-6\">\r\n                    <label for=\"inputEmail4\" className=\"form-label\">Email</label>\r\n                    <input type=\"email\" className=\"form-control\" id=\"inputEmail4\" />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <label for=\"inputPassword4\" className=\"form-label\">Password</label>\r\n                    <input type=\"password\" className=\"form-control\" id=\"inputPassword4\" />\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <label for=\"inputAddress\" className=\"form-label\">Address</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\" />\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <label for=\"inputAddress2\" className=\"form-label\">Address 2</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\" />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <label for=\"inputCity\" className=\"form-label\">City</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <label for=\"inputState\" className=\"form-label\">State</label>\r\n                    <select id=\"inputState\" className=\"form-select\">\r\n                        <option selected>Choose...</option>\r\n                        <option>...</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                    <label for=\"inputZip\" className=\"form-label\">Zip</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"inputZip\" />\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" />\r\n                        <label className=\"form-check-label\" for=\"gridCheck\">\r\n                            Check me out\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Sign in</button>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Text from \"./components/Text\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Contact from \"./components/Contact\";\n\nfunction App() {\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#343a40\";\n      document.body.style.color = \"white\";\n      showAlert('success', 'Darkmode Enabled', 'success')\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showAlert('success', 'Lightmode Enabled', 'success')\n    }\n  };\n  const showAlert = (type, massege, title) => {\n    setalert({\n      typ: type,\n      msg: massege,\n      ttl: title\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 1000);\n  }\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setalert] = useState(null)\n  //========================================================================================  \n  return (\n    <>\n      <Navbar\n        title=\"TextUtils\"\n        about=\"About\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n    <Alert alert={alert} />\n\n      <Routes>\n        <Route path=\"/\" element={<Text mode={mode} showAlert={showAlert} />} />\n        <Route path=\"about\" element={<About />} />\n        <Route path=\"contact\" element={<Contact />} />\n      </Routes>\n\n    </>\n  );\n\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}